<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DigiteX | Home</title>
        <style>
@import url('https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;700&display=swap');
@font-face {
    font-family: 'digitfont';
    src: url('./digifont.ttf') format('truetype');
}
html {
    background-color: #000000;
    margin: 0;
    padding: 0;
    color: #ffffff;
    font-family: "Be Vietnam Pro", sans-serif;
    font-weight: 100;
    font-size: 1.2em;
}
body {
    display: flex;
    min-height: 100vh;
    margin: 0;
}
.sidebar {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    min-width: 240px;
    background: linear-gradient(160deg, #181c22 60%, #222831 100%);
    padding: 32px 0 24px 0;
    box-sizing: border-box;
    border-right: 1.5px solid #222b;
    border-radius: 0 30px 30px 0;
    min-height: 100vh;
    box-shadow: 2px 0 16px 0 #0006;
    gap: 36px;
}
.logo {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    margin-bottom: 10px;
    cursor: pointer;
}
.logo img {
    height: 60px;
    margin-bottom: 2px;
    filter: drop-shadow(0 2px 8px #0008);
}
.logofont {
    font-family: 'digitfont', sans-serif;
    font-size: 2em;
    color: #fff;
    user-select: none;
    letter-spacing: 2px;
    margin: 0;
    text-shadow: 0 2px 8px #0006;
}
.nav-links {
    display: flex;
    flex-direction: column;
    gap: 8px;
    width: 100%;
    align-items: stretch;
    margin-top: 10px;
}
.nav-link {
    display: flex;
    align-items: center;
    gap: 14px;
    color: #b3e5fc;
    text-decoration: none;
    font-weight: 500;
    font-size: 1.13em;
    padding: 12px 0 12px 32px;
    border-left: 4px solid transparent;
    border-radius: 8px 0 0 8px;
    background: none;
    transition: border-color 0.3s, color 0.3s, background 0.3s;
    box-sizing: border-box;
    position: relative;
}
.nav-link:hover,
.nav-link:focus {
    border-left-color: #28829e;
    color: #fff;
    background: #232b3b;
}
.nav-link.active {
    border-left-color: #28829e;
    color: #fff;
    font-weight: 600;
    background: #232b3b;
}
.nav-link .icon {
    font-size: 1.2em;
    width: 1.5em;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    opacity: 0.85;
}
@media (max-width: 900px) {
    .sidebar { width: 70px; min-width: 60px; padding: 10px 0; }
    .logo img { height: 40px; }
    .logofont { font-size: 1em; }
    .nav-link { font-size: 0.9em; padding: 8px 0 8px 10px; gap: 6px; }
    .nav-link .icon { width: 1em; }
}
.top{
    width: 100%;
    height: 70vh;
    background: url('bg.jpg');
    background-size: cover;
    background-position: center;
    box-sizing: border-box;
    border-radius: 30px;
    border-bottom: 2px solid #abe1f1;
    padding:30px;
    padding-top:50px;
}

button {
    background-color: #28829e;
    color: white;
    border: none;
    padding: 12px 24px;
    font-size: 1em;
    border-radius: 50px;
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

.textarea{
    backdrop-filter: blur(10px);
    background: rgba(0, 0, 0, 0.5);
    width: fit-content ;
    padding: 30px;
    border-radius: 20px;
}
footer{
    position: relative;
    bottom: 0;
    width: 100%;
    height: fit-content;
}
.main{
    padding: 20px;
    width: 100%;
}
hr{
    width: 100%;
}

/* Article Management Styles */
.articles {
    margin-top: 30px;
}

.article-card {
    background-color: #161616;
    border: 1px solid #333;
    border-radius: 8px;
    padding: 30px;
    margin-bottom: 20px;
    cursor: default;
    transition: all 0.2s ease;
    position: relative;
}

.article-card:hover {
    border-color: #28829e;
    background-color: #1a1a1a;
}

.article-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
}

.article-status {
    padding: 6px 14px;
    border-radius: 0;
    font-size: 0.8em;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    border: 1px solid;
}

.article-status.visible {
    background: transparent;
    color: #28829e;
    border-color: #28829e;
}

.article-status.hidden {
    background: transparent;
    color: #888;
    border-color: #444;
}

.article-actions {
    display: flex;
    gap: 12px;
}

.toggle-btn, .delete-btn {
    padding: 12px 24px;
    border: none;
    border-radius: 50px;
    font-size: 1em;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease;
}

.publish-btn {
    background-color: #28829e;
    color: white;
}

.publish-btn:hover {
    background-color: #218ca8;
    box-shadow: 0 4px 15px rgba(40, 130, 158, 0.3);
    transform: translateY(-1px);
}

.unpublish-btn {
    background-color: #888;
    color: white;
}

.unpublish-btn:hover {
    background-color: #777;
    box-shadow: 0 4px 15px rgba(136, 136, 136, 0.3);
    transform: translateY(-1px);
}

.delete-btn {
    background-color: #444;
    color: #ccc;
}

.delete-btn:hover {
    background-color: #555;
    color: #fff;
    box-shadow: 0 4px 15px rgba(68, 68, 68, 0.3);
    transform: translateY(-1px);
}

.article-title {
    color: #ffffff;
    font-size: 1.4em;
    font-weight: 600;
    margin: 0 0 15px 0;
    line-height: 1.3;
}

.article-excerpt {
    color: #ccc;
    font-size: 0.9em;
    line-height: 1.6;
    margin-bottom: 20px;
}

.article-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #888;
    font-size: 0.8em;
    flex-wrap: wrap;
    gap: 10px;
}

.article-date, .article-read-time {
    color: #888;
}

.view-link {
    color: #28829e;
    text-decoration: none;
    font-weight: 500;
    padding-bottom: 4px;
    border-bottom: 2px solid transparent;
    transition: border-color 0.3s ease, color 0.3s ease;
}

.view-link:hover {
    border-bottom-color: #28829e;
    color: #fff;
}

.no-articles {
    text-align: center;
    padding: 60px 20px;
    background-color: #161616;
    border: 2px dashed #333;
    border-radius: 8px;
    margin-top: 30px;
}

.no-articles p {
    font-size: 1.2em;
    color: #888;
    margin-bottom: 20px;
}

.create-first-btn {
    display: inline-block;
    padding: 12px 24px;
    background-color: #28829e;
    color: white;
    text-decoration: none;
    border-radius: 50px;
    font-weight: 500;
    transition: background-color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease;
}

.create-first-btn:hover {
    background-color: #218ca8;
    box-shadow: 0 4px 15px rgba(40, 130, 158, 0.3);
    transform: translateY(-1px);
}

/* Confirmation Modal */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(5px);
}

.modal-content {
    background-color: #161616;
    margin: 15% auto;
    padding: 40px;
    border: 1px solid #333;
    border-radius: 8px;
    width: 400px;
    max-width: 90%;
    text-align: center;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.6);
}

.modal h3 {
    color: #ffffff;
    margin-bottom: 15px;
    font-size: 1.4em;
    font-weight: 600;
}

.modal p {
    color: #ccc;
    margin-bottom: 30px;
    line-height: 1.5;
}

.modal-actions {
    display: flex;
    gap: 15px;
    justify-content: center;
}

.confirm-btn, .cancel-btn {
    padding: 12px 24px;
    border: none;
    border-radius: 50px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease;
}

.confirm-btn {
    background-color: #dc3545;
    color: white;
}

.confirm-btn:hover {
    background-color: #c82333;
    box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
    transform: translateY(-1px);
}

.cancel-btn {
    background-color: #444;
    color: #ccc;
}

.cancel-btn:hover {
    background-color: #555;
    color: #fff;
    box-shadow: 0 4px 15px rgba(68, 68, 68, 0.3);
    transform: translateY(-1px);
}

@media (max-width: 768px) {
    .article-header {
        flex-direction: column;
        gap: 15px;
        align-items: stretch;
    }
    
    .article-actions {
        justify-content: center;
    }
    
    .article-meta {
        flex-direction: column;
        align-items: center;
        text-align: center;
    }
    
    .modal-content {
        margin: 25% auto;
        padding: 30px 20px;
    }
    
    .toggle-btn, .delete-btn {
        padding: 10px 20px;
        font-size: 0.9em;
    }
}
    </style>
</head>
<body>
        <div class="sidebar">
            <div class="logo" onclick="location.href='/'">
                <img src="/logo.png" alt="DigiteX Logo">
                <span class="logofont">DigiteX</span>
            </div>
            <nav class="nav-links" role="navigation" aria-label="Primary">
                <a href="authorportal" class="nav-link active"><span class="icon">üè†</span>Dashboard</a>
                <a href="New" class="nav-link"><span class="icon">üìù</span>New Post</a>
            </nav>
        </div>
        <div class="main">
            <p>Welcome Back,</p>
            <p class="logofont" style="font-size: 4em; margin-block:0.6em;line-height: 0;"><%= locals.name %></p>
            <hr>
            <div class="articles">
                <%- articles %>

            </div>
        </div>

        <!-- Delete Confirmation Modal -->
        <div id="deleteModal" class="modal">
            <div class="modal-content">
                <h3>‚ö†Ô∏è Confirm Deletion</h3>
                <p>Are you sure you want to permanently delete this article? This action cannot be undone.</p>
                <div class="modal-actions">
                    <button class="confirm-btn" onclick="confirmDelete()">Delete</button>
                    <button class="cancel-btn" onclick="closeModal()">Cancel</button>
                </div>
            </div>
        </div>

        <script>
            let articleToDelete = null;

            function toggleVisibility(articleId, currentlyVisible) {
                const button = event.target;
                const originalText = button.textContent;
                
                button.disabled = true;
                button.textContent = 'Loading...';

                fetch(`/toggle-visibility/${articleId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ visible: !currentlyVisible })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Reload the page to reflect changes
                        location.reload();
                    } else {
                        alert('Error updating visibility: ' + data.message);
                        button.disabled = false;
                        button.textContent = originalText;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Network error occurred');
                    button.disabled = false;
                    button.textContent = originalText;
                });
            }

            function deleteArticle(articleId) {
                articleToDelete = articleId;
                document.getElementById('deleteModal').style.display = 'block';
            }

            function confirmDelete() {
                if (!articleToDelete) return;

                fetch(`/delete-article/${articleToDelete}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Remove the article card from the page
                        const articleCard = document.querySelector(`[data-id="${articleToDelete}"]`);
                        if (articleCard) {
                            articleCard.style.opacity = '0';
                            articleCard.style.transform = 'translateY(-20px)';
                            setTimeout(() => {
                                articleCard.remove();
                                // Check if there are no more articles
                                const remainingArticles = document.querySelectorAll('.article-card');
                                if (remainingArticles.length === 0) {
                                    location.reload(); // Reload to show "no articles" message
                                }
                            }, 300);
                        }
                        closeModal();
                    } else {
                        alert('Error deleting article: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Network error occurred');
                });
            }

            function closeModal() {
                document.getElementById('deleteModal').style.display = 'none';
                articleToDelete = null;
            }

            // Close modal when clicking outside of it
            window.onclick = function(event) {
                const modal = document.getElementById('deleteModal');
                if (event.target === modal) {
                    closeModal();
                }
            }

            // Close modal with Escape key
            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    closeModal();
                }
            });
        </script>
</body>
</html>